//use of yield sleep and stop in threads
class A extends Thread 
{
    public void run()
    {
        for(int i=1;i<5;i++)
        {
            if(i==1) 
            {
                Thread.yield();
            }
            System.out.println("Thread A:i= "+i+"");

        }
        System.out.println("Exit from Thread A");
    }
}
class B extends Thread 
{
    public void run()
    {
        for(int j=1;j<5;j++)
        {
            if(j==3) stop();
            System.out.println("Thread B:j= "+j+"");
        }
        System.out.println("Exit from Thread B");
    }
}
class C extends Thread 
{
    public void run()
    {
        for(int k=1;k<5;k++)
        {
            System.out.println("Thread C:i= "+k+"");
            if(k==1) 
            try
            {
                sleep(10000);
            }
            catch(Exception e)
            {}
        }
        System.out.println("Exit from Thread C");
    }
}
class ThreadMethods 
{
    public static void main(String[] args) 
    {
       A threadA = new A();
         B threadB = new B();
              C threadC = new C();
              threadA.start();
              threadB.start();
              threadC.start();
    }

}
